
version_name = "1.48.0.11" 
version_code = 1048000 

function show() if not gg.isVisible()then gg.setVisible(true) end end
function hide()if gg.isVisible()then gg.setVisible(true) end end 
function new_search(text, flag, encrypted, sign, memoryFrom, memoryTo, limit)if flag == nil then flag = gg.TYPE_AUTO end if encrypted == nil then  encrypted = false end if sign == nil then sign = gg.SIGN_EQUAL end if memoryFrom == nil  then memoryFrom = 0 end if memoryTo == nil then memoryTo = -1 end if limit == nil then limit = 0 end hide()gg.clearResults() gg.searchNumber(text, flag, encrypted, sign, memoryFrom, memoryTo, limit) end
function get_results(maxCount, skip, addressMin, addressMax, valueMin, valueMax, flag, fractional, pointer)if skip == nil then skip = 0 end local results, count_results = gg.getResults(maxCount, skip, addressMin, addressMax, valueMin, valueMax, flag, fractional, pointer),gg.getResultsCount() return results, count_results end 

function findItemsParentPointer() 
if not count_items_parent_pointer then   
local count_items_parent_pointer = 55
local results, count_results 
if informations.x64 then
local items_root_pointer_constant = "-2999674699455132672"
local items_root_pointer_position = 4
 new_search(items_root_pointer_constant, gg.TYPE_QWORD)
 results, count_results = get_results(1, items_root_pointer_position - 1) 
if count_results >= items_root_pointer_position 
then
 new_search(results[1].address,  gg.TYPE_QWORD) results, count_results = get_results(count_items_parent_pointer) 
if count_results == count_items_parent_pointer 
then parent_pointers.items = results 
else gg.alert("Error: Items parent pointer was not found", "OK") 
os.exit() 
end 
else gg.alert("Error: Items root pointer was not found", "OK") 
os.exit()
end
else 
local items_root_pointer_constant =" -2220275583104843760"
local  items_root_pointer_position = 37
new_search(items_root_pointer_constant, gg.TYPE_QWORD) results, count_results = get_results(1, items_root_pointer_position - 1)
if count_results >= items_root_pointer_position
 then new_search(results[1].address, gg.TYPE_DWORD) 
results, count_results = get_results(count_items_parent_pointer) 
 if count_results == count_items_parent_pointer 
 then parent_pointers.items = results
 else gg.alert("Error: Items parent pointer was not found", "OK") 
 os.exit()
end
else gg.alert("Error: Items root pointer was not found", "OK")
os.exit()
end 
end 
end 
end 

 function verify() if informations then local origin_package, cloning_package, origin_package_length = "com.ea.game.simcitymobile_row", "com.ea.game.simcitymobile_ro", string.len(informations.cmdLine) if informations.cmdLine == origin_package then if informations.versionCode == version_code then return USE_ORIGIN_VERSION
 elseif informations.versionCode > version_code then 
return USE_HIGHER_VERSION else return USE_UNAUTHORIZED_VERSION 
end 
elseif string.find(informations.cmdLine, cloning_package) 
and
 origin_package_length == 29 
then return USE_CLONING_VERSION else 
return USE_UNAUTHORIZED_PACKAGE 
end
else 
return USE_NO_PROCCESS 
end 
end 
 
function min()
parent_pointers = {} 
production_times_pointer = {} 
war_card_pointer = {} 
common_items_pointer = {}
omega_part_pointer = {}
golden_ticket_pointer = {} 
war_booster_pointer = {} 
war_part_pointer = {} 
expansion_certificates_pointer = {} 
building_items_pointer = {}
rare_items_pointer = {}
speed_pointer = {}
pointers = {}
POPULATION_items_pointer ={}

informations = gg.getTargetInfo() USE_ORIGIN_VERSION = 200 USE_HIGHER_VERSION = 203 USE_UNAUTHORIZED_VERSION = 70 USE_CLONING_VERSION = 50 USE_UNAUTHORIZED_PACKAGE = 400 USE_NO_PROCCESS = 404 local verification_code = verify() local is_higher_version = verification_code == USE_HIGHER_VERSION if verification_code == USE_ORIGIN_VERSION or is_higher_version or verification_code == USE_CLONING_VERSION then if is_higher_version then gg.alert("Error: The script can only be run on SimCity BuildIt version " .. version_name .. "") gg.setVisible(true)os.exit() end elseif verification_code == USE_UNAUTHORIZED_VERSION then gg.alert("Error: The script can only be run on SimCity BuildIt version " .. version_name .. "")  gg.setVisible(true) os.exit() elseif verification_code == USE_UNAUTHORIZED_PACKAGE then gg.alert("Error: The script can only be run in the SimCity BuildIt app") gg.setVisible(true) os.exit() elseif verification_code == USE_NO_PROCCESS then gg.alert("Error: No process selected") gg.setVisible(true) os.exit() Next_Level() GetResources() else gg.alert("Error: Failed to verify your GameGuardian")  gg.setVisible(true) os.exit() end end 

--COUNTER FOR ROOT POINTERS
boostercounter=39
omega_counter=10
normal_counter=117
warcardcounter=24
warpartscounter=13
Building_counts=1757

--WAR CARDS CONSTANT OFFSET
offset_warcards64bit =0x50
offset_warcards32bit =0x2C

--WAR BOOSTERS CONSTANT OFFSET
offset_boosters64bit=0x50
offset_boosters32bit=0x2C

--WAR PARTS OFFSET
offset_warparts64bit=0x50
offset_warparts32bit=0x2C

--OMEGA PART OFFSET
offset_omega64bit=0x50
offset_omega32bit=0x2C 

--NORMAL PART PRODUCTION
offset_normal_parts_64bit=0x50
offset_normal_parts_32bit=0x2C

--SPEED TOKENS
offset_speed_token_64bit=0x50
offset_speed_token_32bit=0x2C

--RARE PARTS
offset_rare_parts_64bit=0x50
offset_rare_parts_32bit=0x2C



 --LEVEL UPGRADE
Offset_FREEZE_GET_RESOURCES_LEVEL64_ONE=0x60
Offset_FREEZE_GET_RESOURCES_LEVEL_64_TWO=0x64
Offset_FREEZE_GET_RESOURCES_LEVEL_32_ONE=0x48
Offset_FREEZE_GET_RESOURCES_LEVEL_32_TWO=0x4C
Offset_Next_Level_64=0x10
Offset_Next_Level_32=0x8
 
--NORMAL PART DOUBLE CHECK FOR NEW PARTS
normal_part_check_list_counter=3
offset_normal_part_checklist64=0x20
offset_normal_part_checklist32=0x14

--AIRPORT
offset_airport_64_bit=0x50
offset_airport_32_bit=0x2C

--RESIDENTIAL BUILDINGS
Offset_residentual_one_64=0x124
Offset_residentual_one_32=0xC0
Offset_residentual_two_64=0x124
Offset_residentual_two_32=0xC0
Offset_residentual_four_64=0x128
Offset_residentual_four_32=0xC4
Offset_residentual_five_64=0x4
Offset_residentual_five_32=0x4

--GOLDEN TICKETS
offset_golden_tickets_64bit=0x50
offset_golden_tickets_32bit=0x2C
 
 --CERTIFICATE
 offset_certificate_64bit=0x50
 offset_certificate_32bit=0x2C
 
 --BUILDING CHECKER COUNTER
Buildings_checker_counter_one_64=0x120
Buildings_checker_counter_one_32=0xBC
Buildings_checker_counter_two_64=0x120
Buildings_checker_counter_two_32=0xBC
specificationx32=0x228
specificationx64=0x318 

 --BUILDINGS
offset_buildings_64bit=0x50
offset_buildings_32bit=0x2C

 --ZERO TIMERS
 
 offset_timers_64_bit=0x9C
 offset_timers_64_1=0x1a8
 offset_timers_64_2=0x1b0
 offset_timers_64_3=0x1b8
 offset_timers_32_bit=0x74
 offset_timers_32_1=0x158
offset_timers_32_2=0x15c
offset_timers_32_4=0x160

  --BUILDING OFFSET 50
offset_warcard_level_building_reduce_64bit_1 = 0x338
offset_warcard_level_building_reduce_64bit_2 = 0x340
offset_warcard_level_building_reduce_64bit_3 = 0x348
offset_warcard_level_building_reduce_32bit_1 = 0x238
offset_warcard_level_building_reduce_32bit_2 = 0x23C
offset_warcard_level_building_reduce_32bit_3= 0x240

--WAR CARD LEVEL 
offset_warcard_level_reduce_64_1 = 0x2C8
offset_warcard_level_reduce_64_2 = 0x2D0
offset_warcard_level_reduce_64_3 = 0x2D8
offset_warcard_level_reduce_32_1 = 0x1F8
offset_warcard_level_reduce_32_2 = 0x1FC
offset_warcard_level_reduce_32_3 = 0x200

--WAR CARDS CONSTANT OFFSET REDUCE
offset_warcards_constant_64bit_1=0x50
offset_warcards_constant_32bit_1 =0x2C
REVERT_WARCARD64=0X2E8
REVERT_WARCARD32=0X20C
NEXT_VALUE_FOR_WARCARD32=0x4
NEXT_VALUE_FOR_WARCARD32x64=0x8
NEXT_VALUE_FOR_WARCARD64=0x10
 SPECIFICATION_LAKE= 1092744876
 
-- POPULATION 
population_boost = 1130306404
offset_population_64bit = 0x50
offset_population_32bit = 0x2C

--freeze parts or stuff none simcash or coins or to unlimited storage 
constant_All_64_1 = 0x18
constant_All_64_2 = 0x1C
constant_All_64_3 = 0x20
constant_All_64_4 = 0x24

constant_All_32_1 = 0x18
constant_All_32_2 = 0x1C
constant_All_32_3 = 0x20
constant_All_32_4 = 0x24

function seven(table)local i = 0 for pointer in pairs(table) do i = i + 1 end return i end
function eigth()gg.setVisible(true)if n~=nil
 then gg.setValues(n)
end
gg.showUiButton() while true do if gg.isClickedUiButton() then gg.hideUiButton()gg.setVisible(false)break end gg.sleep(100) end end
min()
function Mainmenu()  
local zz = {"1. MOUNTAIN ","2.  MOUNTAIN CHECKER";"3. MOUNTAIN  TRANSFORM","4. TIMERS","5. PRODUCTION","6. GAME GUARDIAN","8.EXIT"} 
local z = gg.multiChoice(zz, nil,"Mainmenu") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then mountian_names()
end 
if z[2] then mountian_checker()
end
if z[3] then mountian_transform()
end
if z[4] then execute_alter_production_times()
end 
if z[5] then Production_submenu()
end 
if z[6] then eigth()
end 
if z[7] then exit() 
end
end 
end
end

function building_finder()
findbuildingItemsPointer() 
local Offset_one = gg.getResults(1741) 
local results = {};
for i, one_Offset in ipairs(building_items_pointer.building_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_buildings_64bit or offset_buildings_32bit), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results) 
end

function mountian_checker() 
Buildings_checker_counter_one()
gg.refineNumber("41")  
Buildings_checker_counter_two()
gg.clearResults()
gg.toast("Successfully ") 
end

MOUNTAINSIDE_TRAIN_STATION=-1734299794
SKI_HOTEL=-2139578863
COZY_COTTAGES=-2025654154
MOUNTAINSIDE_COTTAGES=-2025654153
HIKERS_COTTAGES=-2025654152
MOUNTAIN_LIFT=157576222
ALPINE_CAFE=157244062
HALFPIPE=-1270815176
SKI_JUMPING_HILL=-1720727207
SKI_RESORT=-2094361322
COMMUNICATION_TOWER=914769152
OBSERVATORY=1853415023
CASTLE=-559421141
ALPINE_VINEYARD=206141169
MOUNT_SIMCITY=47626276
MOUNTAIN_PALACE=-50933579
CITY_NAME_SIGN=157827808
WHITEWATER_PARK=1876019625
PARAGLIDING_CENTER=1467693470
MOUNTAIN_BIKE_PARK=607141114
SNOW_CASTLE=-1674266991
MOUNTAIN_CLIMBING_CAMP=-1912214732
WATERFALL_CASTLE=1845899276
STONE_FACE_WATERFALL=824472135
GRITTY_GOLD_MINE=381249066
PETRA_RUINS=582544155
BOBSLED_TRACK=220272830
GLACIER_CLIMBING=982418464
HILLTOP_HOTEL=-2104088772
MOUNTAIN_SKYWALK=-1693811819
SNOWBOARD_CROSS=-1337103427
FAMILY_SLED_TRACK=-1401192830
COUNTS_CASTLE=-1929681207
MOUNTAIN_RAILWAY=483145387
PANDA_HABITAT=-1738477098
SNOW_LEOPARD_HABITAT=1950092739
GORILLA_HABITAT=-1924457380
NORTHERN_LIGHTS_CABIN=-966691068
HOT_AIR_BALLOON_FESTIVAL=2128064116
FURUSATO_NO_OSHOGATSU=769983670
MOUNTAIN_HOTEL= 1999774098     
HILLSIDE_CASTLE =-1320764511        
HILLSIDE_FORT = 2095360422   
MOUNTAIN_GARDENS =440188653    

function mountian_names()   
local zz = {
"1. MOUNTAINSIDE TRAIN STATION",
"2. SKI HOTEL",
"3. COZY COTTAGES",
"4. MOUNTAIN SIDE COTTAGES",
"5. HIKERS COTTAGES",
"6. MOUNTAIN LIFT",
"7. ALPINE CAFE",
"8. HALF PIPE",
"9. SKI JUMPING HILL",
"10. SKI RESORT",
"11. COMMUNICATION TOWER",
"12. OBSERVATORY",
"13. CASTLE",
"14. ALPINE VINEYARD",
"15. MOUNT SIMCITY",
"16. MOUNTAIN PALACE",
"17. CITY NAME SIGN",
"18. WHITE WATER PARK",
"19. PARAGLIDING CENTER",
"20. MOUNTAIN BIKE PARK",
"21. SNOW CASTLE",
"22. MOUNTAIN CLIMBING CAMP",
"23. WATERFALL CASTLE",
"24. STONE FACE WATERFALL",
"25. GRITTY GOLD MINE",
"26. PETRA RUINS",
"27. BOBSLED TRACK",
"28. GLACIER CLIMBING",
"29. HILL TOP HOTEL",
"30. MOUNTAIN SKYWALK",
"31. SNOWBOARD CROSS",
"32. FAMILY SLED TRACK",
"33. COUNTS CASTLE",
"34. MOUNTAIN RAILWAY",
"35. PANDA HABITAT",
"36. SNOW LEOPARD HABITAT",
"37. GORILLA HABITAT",
"38. NORTHERN LIGHTS CABIN",
"39. HOT AIR BALLOON FESTIVAL",
"40. FURUSATO NO OSHOGATSU",
"41. MOUNTAIN HOTEL",
"42. HILLSIDE CASTLE ",
"43. HILLSIDE FORT",
"44. MOUNTAIN GARDENS",
"45.MOUNTIAN All",
"46. OPEN GAME GUARDIAN",
"47. BACK",
"48.EXIT"} 
local z = gg.multiChoice(zz, nil,"MOUNTAIN NAMES") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then MOUNTAINSIDE_TRAIN_STATION_1()
end
if z[2] then SKI_HOTEL_2()
end
if z[3] then COZY_COTTAGES_3()
end
if z[4] then MOUNTAINSIDE_COTTAGES_4()
end
if z[5] then HIKERS_COTTAGES_5()
end
if z[6] then MOUNTAIN_LIFT_6()
end
if z[7] then ALPINE_CAFE_7()
end
if z[8] then HALFPIPE_8()
end
if z[9] then SKI_JUMPING_HILL_9()
end
if z[10] then SKI_RESORT_10()
end
if z[11] then COMMUNICATION_TOWER_11()
end 
if z[12] then OBSERVATORY_12()
end 
if z[13] then CASTLE_13()
end 
if z[14] then ALPINE_VINEYARD_14()
end 
if z[15] then MOUNT_SIMCITY_15()
end
if z[16] then MOUNTAIN_PALACE_16()
end
if z[17] then CITY_NAME_SIGN_17()
end
if z[18] then WHITEWATER_PARK_18()
end
if z[19] then PARAGLIDING_CENTER_19()
end
if z[20] then MOUNTAIN_BIKE_PARK_20()
end
if z[21] then SNOW_CASTLE_21()
end
if z[22] then MOUNTAIN_CLIMBING_CAMP_22()
end
if z[23] then WATERFALL_CASTLE_23()
end
if z[24] then STONE_FACE_WATERFALL_24()
end
if z[25] then GRITTY_GOLD_MINE_25()
end
if z[26] then PETRA_RUINS_26()
end
if z[27] then BOBSLED_TRACK_27()
end
if z[28] then GLACIER_CLIMBING_28()
end
if z[29] then HILLTOP_HOTEL_29()
end
if z[30] then MOUNTAIN_SKYWALK_30()
end
if z[31] then SNOWBOARD_CROSS_31()
end 
if z[32] then FAMILY_SLED_TRACK_32()
end 
if z[33] then COUNTS_CASTLE_33()
end 
if z[34] then MOUNTAIN_RAILWAY_34()
end 
if z[35] then PANDA_HABITAT_35()
end
if z[36] then SNOW_LEOPARD_HABITAT_36()
end
if z[37] then GORILLA_HABITAT_37()
end
if z[38] then NORTHERN_LIGHTS_CABIN_38()
end
if z[39] then HOT_AIR_BALLOON_FESTIVAL_39()
end
if z[40] then FURUSATO_NO_OSHOGATSU_40()
end
if z[41] then MOUNTAIN_HOTEL_41()
end
if z[42] then HILLSIDE_CASTLE_42()
end
if z[43] then HILLSIDE_FORT_43()
end
if z[44] then MOUNTAIN_GARDENS_44()
end
if z[45] then MOUNTIAN_ALL()
end 
if z[46] then MOUNTIAN_ALL_daniel()
end 
if z[47] then eigth()
end 
if z[48] then exit()
end
end
end
end

function MOUNTIAN_ALL()
mountian_checker() 
MOUNTAINSIDE_TRAIN_STATION_1()   
SKI_HOTEL_2() 
COZY_COTTAGES_3() 
MOUNTAINSIDE_COTTAGES_4() 
HIKERS_COTTAGES_5()
MOUNTAIN_LIFT_6()
ALPINE_CAFE_7()
HALFPIPE_8() 
SKI_JUMPING_HILL_9() 
SKI_RESORT_10() 
COMMUNICATION_TOWER_11()
OBSERVATORY_12() 
CASTLE_13() 
ALPINE_VINEYARD_14() 
MOUNT_SIMCITY_15() 
MOUNTAIN_PALACE_16()
CITY_NAME_SIGN_17() 
WHITEWATER_PARK_18() 
PARAGLIDING_CENTER_19() 
MOUNTAIN_BIKE_PARK_20() 
SNOW_CASTLE_21() 
MOUNTAIN_CLIMBING_CAMP_22() 
WATERFALL_CASTLE_23() 
STONE_FACE_WATERFALL_24()
GRITTY_GOLD_MINE_25() 
PETRA_RUINS_26() 
BOBSLED_TRACK_27() 
GLACIER_CLIMBING_28() 
HILLTOP_HOTEL_29() 
MOUNTAIN_SKYWALK_30() 
SNOWBOARD_CROSS_31() 
FAMILY_SLED_TRACK_32() 
COUNTS_CASTLE_33()
MOUNTAIN_RAILWAY_34() 
PANDA_HABITAT_35() 
SNOW_LEOPARD_HABITAT_36() 
GORILLA_HABITAT_37() 
NORTHERN_LIGHTS_CABIN_38() 
HOT_AIR_BALLOON_FESTIVAL_39() 
FURUSATO_NO_OSHOGATSU_40() 
MOUNTAIN_HOTEL_41()   
HILLSIDE_CASTLE_42() 
HILLSIDE_FORT_43() 
MOUNTAIN_GARDENS_44() 
end

function MOUNTIAN_ALL_daniel()
MOUNTAINSIDE_TRAIN_STATION_DANIEL_1()   
SKI_HOTEL_DANIEL_2() 
COZY_COTTAGES_DANIEL_3() 
MOUNTAINSIDE_COTTAGES_DANIEL_4() 
HIKERS_COTTAGES_DANIEL_5()
MOUNTAIN_LIFT_DANIEL_6()
ALPINE_CAFE_DANIEL_7()
HALFPIPE_daniel_8() 
SKI_JUMPING_HILL_DANIEL_9() 
SKI_RESORT_DANIEL_10() 
COMMUNICATION_TOWER_DANIEL_11()
OBSERVATORY_DANIEL_12() 
CASTLE_DANIEL_13() 
ALPINE_VINEYARD_DANIEL_14() 
MOUNT_SIMCITY_DANIEL_15() 
MOUNTAIN_PALACE_DANIEL_16()
CITY_NAME_SIGN_DANIEL_17() 
WHITEWATER_PARK_DANIEL_18() 
PARAGLIDING_CENTER_DANIEL_19() 
MOUNTAIN_BIKE_PARK_DANIEL_20() 
SNOW_CASTLE_DANIEL_21() 
MOUNTAIN_CLIMBING_CAMP_DANIEL_22()
WATERFALL_CASTLE_DANIEL_23() 
STONE_FACE_WATERFALL_DANIEL_24()
GRITTY_GOLD_MINE_DANIEL_25() 
PETRA_RUINS_DANIEL_26() 
BOBSLED_TRACK_DANIEL_27() 
GLACIER_CLIMBING_DANIEL_28() 
HILLTOP_HOTEL_DANIEL_29() 
MOUNTAIN_SKYWALK_DANIEL_30() 
SNOWBOARD_CROSS_DANIEL_31() 
FAMILY_SLED_TRACK_DANIEL_32() 
COUNTS_CASTLE_DANIEL_33()
MOUNTAIN_RAILWAY_DANIEL_34() 
PANDA_HABITAT_DANIEL_35() 
SNOW_LEOPARD_HABITAT_DANIEL_36() 
GORILLA_HABITAT_DANIEL_37() 
NORTHERN_LIGHTS_CABIN_DANIEL_38() 
HOT_AIR_BALLOON_FESTIVAL_DANIEL_39() 
FURUSATO_NO_OSHOGATSU_DANIEL_40() 
MOUNTAIN_HOTEL_DANIEL_41()   
HILLSIDE_CASTLE_DANIEL_42() 
HILLSIDE_FORT_DANIEL_43() 
MOUNTAIN_GARDENS_DANIEL_44() 
end

function mountian_transform()
iron_mountian_1() 
wood_mountian_2()
plastic_mountian_3()
seed_mountian_4()
minerals_mountian_5()
chemical_mountian_6()
texile_mountian_7()
glass_mountian_8()
animalfeed_mountian_9()
sugar_and_spice_mountian_10()
electric_comp_mountian_11()
nails_mountian_12() 
planks_mountian_13()
bricks_mountian_14()
cement_mountian_15()
glue_mountian_16()
paint_mountian_17()
hammer_mountian_18() 
measuring_tape_mountian_19()
cooking_untensils_mountian_20()
shovel_mountian_21()
ladder_mountian_22()
drill_mountian_23()
Vegetables_mountian_24() 
Flourbag_mountian_25()
fruit_and_berries_mountian_26()
beef_mountian_27()
cheese_mountian_28()
corn_mountian_29()
cream_mountian_30()
chairs_mountian_31() 
Tables_mountian_32()
Home_texiles_mountian_33()
couch_mountian_34()
cupboard_mountian_35()
grass_mountian_36() 
tree_sampling_mountian_37()
garden_furniture_mountian_38()
firepit_mountian_39()
garden_nomes_mountian_40()
lawnmover_mountian_41()
donut_mountian_42()
green_smoothie_mountian_43()
breadroll_mountian_44()
end

--nano --11

--iron 1

function iron_mountian_1()
MOUNTAINSIDE_TRAIN_STATION_DANIEL_1()
iron_daniel() 
cp()  
gg.clearList()
gg.clearResults()
end

--wood 2

function wood_mountian_2()
SKI_HOTEL_DANIEL_2() 
wood_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--plastic 3
function plastic_mountian_3()
COZY_COTTAGES_DANIEL_3() 
plastic_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--seed 4 
function seed_mountian_4()
MOUNTAINSIDE_COTTAGES_DANIEL_4()
seed_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--minerals 5
function minerals_mountian_5()
HIKERS_COTTAGES_DANIEL_5()
minerals_daniel()
cp()  
gg.clearList()
gg.clearResults()
end

--chemical 6 
function chemical_mountian_6()
MOUNTAIN_LIFT_DANIEL_6()
chemical_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--textile 7
function texile_mountian_7()
ALPINE_CAFE_DANIEL_7()
texile_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--glass 8
function glass_mountian_8()
HALFPIPE_daniel_8() 
glass_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--animalfeed 9
function animalfeed_mountian_9()
SKI_JUMPING_HILL_DANIEL_9() 
animalfeed_daniel()
cp()
gg.clearList()
gg.clearResults()
end

-- sugar and spice 10
function sugar_and_spice_mountian_10()
SKI_RESORT_DANIEL_10() 
sugar_and_spice_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--electric components 11
function electric_comp_mountian_11()
COMMUNICATION_TOWER_DANIEL_11()
electriccomp_daniel()
cp()
gg.clearList()
gg.clearResults()
end

-- BUILDING STORE --6

--nails 12

function nails_mountian_12()
OBSERVATORY_DANIEL_12() 
nail_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--planks 13

function planks_mountian_13()
CASTLE_DANIEL_13() 
planks_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--bricks 14

function bricks_mountian_14()
ALPINE_VINEYARD_DANIEL_14()
bricks_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--cement  15

function cement_mountian_15()
MOUNT_SIMCITY_DANIEL_15() 
cement_daniel()
cp()
gg.clearList()
gg.clearResults()
end

-- glue 16

function glue_mountian_16()
MOUNTAIN_PALACE_DANIEL_16()
glue_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--paint 17 *

function paint_mountian_17()
CITY_NAME_SIGN_DANIEL_17() 
paint_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--HARDWARE STORE --6

--hammer 18

function hammer_mountian_18()
WHITEWATER_PARK_DANIEL_18()
hammer_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--measuring tape 19

function measuring_tape_mountian_19()
PARAGLIDING_CENTER_DANIEL_19() 
measuring_tape_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--cooking_untensils 20

function cooking_untensils_mountian_20()
MOUNTAIN_BIKE_PARK_DANIEL_20() 
cooking_untensils_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--shovel 21

function shovel_mountian_21()
SNOW_CASTLE_DANIEL_21() 
shovel_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--ladder  22

function ladder_mountian_22()
MOUNTAIN_CLIMBING_CAMP_DANIEL_22()
ladder_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--drill 23 *

function drill_mountian_23()
WATERFALL_CASTLE_DANIEL_23() 
drill_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--FARMERS MARKET

--Vegetables 24

function Vegetables_mountian_24()
STONE_FACE_WATERFALL_DANIEL_24()
Vegetables_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--Flourbag 25

function Flourbag_mountian_25()
GRITTY_GOLD_MINE_DANIEL_25() 
Flourbag_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--fruit_and_berries 26

function fruit_and_berries_mountian_26()
PETRA_RUINS_DANIEL_26() 
fruit_and_berries_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--beef 27

function beef_mountian_27()
BOBSLED_TRACK_DANIEL_27() 
beef_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--cheese 28

function cheese_mountian_28()
GLACIER_CLIMBING_DANIEL_28() 
cheese_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--corn 29

function corn_mountian_29()
HILLTOP_HOTEL_DANIEL_29() 
corn_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--cream 30

function cream_mountian_30()
MOUNTAIN_SKYWALK_DANIEL_30() 
cream_daniel()
cp()
gg.clearList()
gg.clearResults()
end

-- FURNITURE STORE

--chairs_daniel 31

function chairs_mountian_31()
SNOWBOARD_CROSS_DANIEL_31() 
chairs_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--Tables 32

function Tables_mountian_32()
FAMILY_SLED_TRACK_DANIEL_32() 
Tables_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--Home_texiles 33

function Home_texiles_mountian_33()
COUNTS_CASTLE_DANIEL_33()
Home_texiles_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--couch 34 *** level 33

function couch_mountian_34()
MOUNTAIN_RAILWAY_DANIEL_34() 
couch_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--cupboard 35

function cupboard_mountian_35()
PANDA_HABITAT_DANIEL_35() 
cupboard_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--GARDEN SUPPLIES

--grass 36

function grass_mountian_36()
SNOW_LEOPARD_HABITAT_DANIEL_36() 
grass_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--tree_sampling 37

function tree_sampling_mountian_37()
GORILLA_HABITAT_DANIEL_37() 
tree_sampling_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--garden_furniture 38
function garden_furniture_mountian_38()
NORTHERN_LIGHTS_CABIN_DANIEL_38() 
garden_furniture_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--firepit 39
function firepit_mountian_39()
HOT_AIR_BALLOON_FESTIVAL_DANIEL_39() 
firepit_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--garden_nomes 40 level 34
function garden_nomes_mountian_40()
FURUSATO_NO_OSHOGATSU_DANIEL_40() 
garden_nomes_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--lawnmover 41

function lawnmover_mountian_41()
MOUNTAIN_HOTEL_DANIEL_41()   
lawnmover_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--DONUT SHOP

--donut 42
function donut_mountian_42()
HILLSIDE_CASTLE_DANIEL_42() 
donut_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--green_smoothie 43
function green_smoothie_mountian_43()
HILLSIDE_FORT_DANIEL_43() 
green_smoothie_daniel()
cp()
gg.clearList()
gg.clearResults()
end

--breadroll 44
function breadroll_mountian_44()
MOUNTAIN_GARDENS_DANIEL_44() 
breadroll_daniel()
cp()
gg.clearList()
gg.clearResults()
end

function MOUNTAINSIDE_TRAIN_STATION_1()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAINSIDE_TRAIN_STATION then 
s = {{name = "MOUNTAINSIDE TRAIN STATION", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}
break 
end 
end
 gg.addListItems(s) 
gg.toast("MOUNTAINSIDE TRAIN STATION") 
end 

function MOUNTAINSIDE_TRAIN_STATION_DANIEL_1()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAINSIDE_TRAIN_STATION then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD 
end 
gg.loadResults(n)
gg.addListItems(n)
end
function SKI_HOTEL_2()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SKI_HOTEL then s = {{name = "SKI HOTEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SKI HOTEL") 
end 

function SKI_HOTEL_DANIEL_2()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SKI_HOTEL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function COZY_COTTAGES_3()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COZY_COTTAGES then s = {{name = "COZY COTTAGES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("COZY COTTAGES") 
end 

function COZY_COTTAGES_DANIEL_3()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COZY_COTTAGES then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAINSIDE_COTTAGES_4()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAINSIDE_COTTAGES then s = {{name = "MOUNTAIN SIDE COTTAGES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("MOUNTAIN SIDE COTTAGES") 
end 

function MOUNTAINSIDE_COTTAGES_DANIEL_4()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAINSIDE_COTTAGES then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function HIKERS_COTTAGES_5()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HIKERS_COTTAGES then s = {{name = "HIKERS COTTAGES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS HIKERS COTTAGES") 
end 

function HIKERS_COTTAGES_DANIEL_5()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HIKERS_COTTAGES then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAIN_LIFT_6()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_LIFT then s = {{name = "MOUNTAIN LIFT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS MOUNTAIN LIFT") 
end 

function MOUNTAIN_LIFT_DANIEL_6()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_LIFT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function ALPINE_CAFE_7()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ALPINE_CAFE then s = {{name = "ALPINE CAFE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("ALPINE CAFE") 
end 

function ALPINE_CAFE_DANIEL_7()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ALPINE_CAFE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function HALFPIPE_8()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HALFPIPE then s = {{name = "HALF PIPE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS HALF PIPE") 
end 

function HALFPIPE_daniel_8()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HALFPIPE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function SKI_JUMPING_HILL_9()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SKI_JUMPING_HILL then s = {{name = "SKI JUMPING HILL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SKI JUMPING HILL") 
end 

function SKI_JUMPING_HILL_DANIEL_9()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SKI_JUMPING_HILL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function SKI_RESORT_10()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SKI_RESORT then s = {{name = "SKI RESORT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SKI RESORT") 
end 

function SKI_RESORT_DANIEL_10()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SKI_RESORT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function COMMUNICATION_TOWER_11()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COMMUNICATION_TOWER then s = {{name = "COMMUNICATION TOWER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS COMMUNICATION TOWER") 
end 

function COMMUNICATION_TOWER_DANIEL_11()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COMMUNICATION_TOWER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function OBSERVATORY_12()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OBSERVATORY then s = {{name = "OBSERVATORY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS OBSERVATORY") 
end 

function OBSERVATORY_DANIEL_12()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OBSERVATORY then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function CASTLE_13()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CASTLE then s = {{name = "CASTLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS CASTLE") 
end 

function CASTLE_DANIEL_13()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CASTLE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function ALPINE_VINEYARD_14()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ALPINE_VINEYARD then s = {{name = "ALPINE VINEYARD", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS ALPINE VINEYARD") 
end 

function ALPINE_VINEYARD_DANIEL_14()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ALPINE_VINEYARD then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNT_SIMCITY_15()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNT_SIMCITY then s = {{name = "MOUNT SIMCITY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS MOUNT SIMCITY") 
end 

function MOUNT_SIMCITY_DANIEL_15()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNT_SIMCITY then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAIN_PALACE_16()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_PALACE then s = {{name = "MOUNTAIN PALACE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS MOUNTAIN PALACE") 
end 

function MOUNTAIN_PALACE_DANIEL_16()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_PALACE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function CITY_NAME_SIGN_17()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CITY_NAME_SIGN then s = {{name = "CITY NAME SIGN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS CITY NAME SIGN") 
end 

function CITY_NAME_SIGN_DANIEL_17()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CITY_NAME_SIGN then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function WHITEWATER_PARK_18()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WHITEWATER_PARK then s = {{name = "WHITE WATER PARK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS WHITE WATER PARK") 
end 

function WHITEWATER_PARK_DANIEL_18()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WHITEWATER_PARK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function PARAGLIDING_CENTER_19()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PARAGLIDING_CENTER then s = {{name = "PARAGLIDING CENTER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PARAGLIDING CENTER") 
end 

function PARAGLIDING_CENTER_DANIEL_19()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PARAGLIDING_CENTER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAIN_BIKE_PARK_20()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_BIKE_PARK then s = {{name = "MOUNTAIN BIKE PARK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS MOUNTAIN BIKE PARK") 
end 

function MOUNTAIN_BIKE_PARK_DANIEL_20()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_BIKE_PARK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function SNOW_CASTLE_21()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SNOW_CASTLE then s = {{name = "SNOW CASTLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SNOW CASTLE") 
end 

function SNOW_CASTLE_DANIEL_21()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SNOW_CASTLE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAIN_CLIMBING_CAMP_22()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_CLIMBING_CAMP then s = {{name = "MOUNTAIN CLIMBING CAMP", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS MOUNTAIN CLIMBING CAMP") 
end 

function MOUNTAIN_CLIMBING_CAMP_DANIEL_22()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_CLIMBING_CAMP then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function WATERFALL_CASTLE_23()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WATERFALL_CASTLE then s = {{name = "WATERFALL CASTLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS WATERFALL CASTLE") 
end 

function WATERFALL_CASTLE_DANIEL_23()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WATERFALL_CASTLE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function STONE_FACE_WATERFALL_24()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == STONE_FACE_WATERFALL then s = {{name = "STONE FACE WATERFALL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS STONE FACE WATERFALL") 
end 

function STONE_FACE_WATERFALL_DANIEL_24()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == STONE_FACE_WATERFALL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function GRITTY_GOLD_MINE_25()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GRITTY_GOLD_MINE then s = {{name = "GRITTY GOLD MINE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS GRITTY GOLD MINE") 
end 

function GRITTY_GOLD_MINE_DANIEL_25()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GRITTY_GOLD_MINE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function PETRA_RUINS_26()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PETRA_RUINS then s = {{name = "PETRA RUINS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PETRA RUINS") 
end 

function PETRA_RUINS_DANIEL_26()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PETRA_RUINS then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function BOBSLED_TRACK_27()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BOBSLED_TRACK then s = {{name = "BOBSLED TRACK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BOBSLED TRACK") 
end 

function BOBSLED_TRACK_DANIEL_27()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BOBSLED_TRACK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function GLACIER_CLIMBING_28()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GLACIER_CLIMBING then s = {{name = "GLACIER CLIMBING", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS GLACIER CLIMBING ") 
end 

function GLACIER_CLIMBING_DANIEL_28()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GLACIER_CLIMBING then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function HILLTOP_HOTEL_29()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HILLTOP_HOTEL then s = {{name = "HILL TOP HOTEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS HILL TOP HOTEL") 
end 

function HILLTOP_HOTEL_DANIEL_29()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HILLTOP_HOTEL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAIN_SKYWALK_30()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_SKYWALK then s = {{name = "MOUNTAIN SKYWALK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS MOUNTAIN SKYWALK") 
end 

function MOUNTAIN_SKYWALK_DANIEL_30()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_SKYWALK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end


function SNOWBOARD_CROSS_31()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SNOWBOARD_CROSS then s = {{name = "SNOWBOARD CROSS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SNOWBOARD CROSS") 
end 

function SNOWBOARD_CROSS_DANIEL_31()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SNOWBOARD_CROSS then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function FAMILY_SLED_TRACK_32()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == FAMILY_SLED_TRACK then s = {{name = "FAMILY SLED TRACK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS FAMILY SLED TRACK") 
end 

function FAMILY_SLED_TRACK_DANIEL_32()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == FAMILY_SLED_TRACK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function COUNTS_CASTLE_33()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COUNTS_CASTLE then s = {{name = "COUNTS CASTLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS COUNTS CASTLE") 
end 

function COUNTS_CASTLE_DANIEL_33()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COUNTS_CASTLE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAIN_RAILWAY_34()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_RAILWAY then s = {{name = "MOUNTAIN RAILWAY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS MOUNTAIN RAILWAY") 
end 

function MOUNTAIN_RAILWAY_DANIEL_34()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_RAILWAY then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function PANDA_HABITAT_35()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PANDA_HABITAT then s = {{name = "PANDA HABITAT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PANDA HABITAT") 
end 

function PANDA_HABITAT_DANIEL_35()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PANDA_HABITAT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function SNOW_LEOPARD_HABITAT_36()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SNOW_LEOPARD_HABITAT then s = {{name = "SNOW LEOPARD HABITAT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SNOW LEOPARD HABITAT") 
end 

function SNOW_LEOPARD_HABITAT_DANIEL_36()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SNOW_LEOPARD_HABITAT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function GORILLA_HABITAT_37()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GORILLA_HABITAT then s = {{name = "GORILLA HABITAT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS GORILLA HABITAT") 
end 

function GORILLA_HABITAT_DANIEL_37()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GORILLA_HABITAT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function NORTHERN_LIGHTS_CABIN_38()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == NORTHERN_LIGHTS_CABIN then s = {{name = "NORTHERN LIGHTS CABIN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS NORTHERN LIGHTS CABIN") 
end 

function NORTHERN_LIGHTS_CABIN_DANIEL_38()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == NORTHERN_LIGHTS_CABIN then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function HOT_AIR_BALLOON_FESTIVAL_39()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HOT_AIR_BALLOON_FESTIVAL then s = {{name = "HOT AIR BALLOON FESTIVAL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS HOT AIR BALLOON FESTIVAL") 
end 

function HOT_AIR_BALLOON_FESTIVAL_DANIEL_39()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HOT_AIR_BALLOON_FESTIVAL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function FURUSATO_NO_OSHOGATSU_40()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == FURUSATO_NO_OSHOGATSU then s = {{name = "FURUSATO NO OSHOGATSU", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS FURUSATO NO OSHOGATSU") 
end 

function FURUSATO_NO_OSHOGATSU_DANIEL_40()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == FURUSATO_NO_OSHOGATSU then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end


function MOUNTAIN_HOTEL_41()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_HOTEL then 
s = {{name = "MOUNTAIN HOTEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}
break 
end 
end
 gg.addListItems(s) 
gg.toast("MOUNTAIN HOTEL") 
end 

function MOUNTAIN_HOTEL_DANIEL_41()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_HOTEL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function HILLSIDE_CASTLE_42()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HILLSIDE_CASTLE then s = {{name = "HILLSIDE CASTLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCEED HILLSIDE CASTLE") 
end 

function HILLSIDE_CASTLE_DANIEL_42()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HILLSIDE_CASTLE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function HILLSIDE_FORT_43()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HILLSIDE_FORT then s = {{name = "HILLSIDE FORT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("HILLSIDE FORT") 
end 

function HILLSIDE_FORT_DANIEL_43()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HILLSIDE_FORT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end

function MOUNTAIN_GARDENS_44()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_GARDENS then s = {{name = "MOUNTAIN_GARDENS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("MOUNTAIN_GARDENS") 
end 

function MOUNTAIN_GARDENS_DANIEL_44()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MOUNTAIN_GARDENS then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n)gg.addListItems(n)end


function storage_all_checker() 
Buildings_checker_counter_one()
gg.refineNumber("27")  
Buildings_checker_counter_two()
Buildings_checker_counter_3()
gg.clearList()
gg.clearResults()
gg.toast("Successfully ") 
end

function Buildings_checker_counter_one()
findbuildingItemsPointer() 
local results = {};
for i, one_Offset in ipairs(building_items_pointer.building_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and Buildings_checker_counter_one_64 or Buildings_checker_counter_one_32), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results)
end

function Buildings_checker_counter_two()
local Offset_one = gg.getResults(1741)
local results = {};
for i, one_Offset in ipairs(Offset_one) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and -Buildings_checker_counter_two_64 or -Buildings_checker_counter_two_32), flags = gg.TYPE_DWORD}
end  
gg.addListItems(results)  
gg.clearResults()
end
 
function Buildings_checker_counter_3()
boo =gg.getListItems(gg.getResultsCount())gg.clearList()
fxdw={} 
for i,valdw in ipairs(boo)do 
fxdw[#fxdw+1]={flags=4,address =valdw.address +(informations.x64 and offset_buildings_64bit or offset_buildings_32bit) ,value= -1223401015}
end 
gg.setValues(fxdw)
gg.addListItems(fxdw)
end  
 
function Production_submenu()  
local zz = {"1. PRODUCTION","2. PRODUCTION DANIEL ","3. OPEN GAME GUARDIAN","4. BACK ","5. EXIT"} 
local z = gg.multiChoice(zz, nil,"Mainmenu") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then Production_daniel()
end
if z[2] then Production_daniels()  
end
if z[3] then eigth()
end 
if z[4] then warparts_instant()
end 
if z[5] then exit()
end
if z[4] then Mainmenu()
end 
end 
end
end

function POPULATION_DANIEL()
 findPOPULATIONItemsPointer() 
POPULATION_items = {};
for i, pointer in ipairs(POPULATION_items_pointer.POPULATION_items) 
do POPULATION_items[#POPULATION_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_population_64bit or offset_population_32bit)} 
end 
gg.loadResults(POPULATION_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1130306404
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_population_64bit or -offset_population_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.addListItems(n)
end

a =gg.getListItems(gg.getResultsCount())
function warcardreduces()
if a~=0 then;else end
iron_daniel() 
POPULATIONS_contsant()
cp()
end


function POPULATIONS_contsant() 
 findPOPULATIONItemsPointer() 
POPULATION_items = {};
for i, pointer in ipairs(POPULATION_items_pointer.POPULATION_items) 
do POPULATION_items[#POPULATION_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_population_64bit or offset_population_32bit)} 
end 
gg.loadResults(POPULATION_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1130306404
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_population_64bit or -offset_population_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.addListItems(n)
end

function storage_increase()
n=gg.getListItems(gg.getResultsCount())  gg.clearList()
fxdw={}
for i,valdw in ipairs(n)do 
fxdw[#fxdw+1]={value = -1, flags=4,address =valdw.address+(informations.x64 and POPx64 or POPx32)}
end  
gg.setValues(fxdw)
gg.addListItems(fxdw)
end  

function abc()
hallo =gg.getListItems(gg.getResultsCount())  gg.clearList()
fxdw={}
for i,valdw in ipairs(hallo)do 
fxdw[#fxdw+1]={flags=4,address =valdw.address}
end  
gg.addListItems(fxdw)
end  

function freezeparts()
b=gg.getListItems(gg.getResultsCount())  gg.clearList()
fxdw={}
for i,valdw in ipairs(b)do
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_1 or constant_All_32_1)}
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_2 or constant_All_32_2)}
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_3 or constant_All_32_3)}
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_4 or constant_All_32_4)}
end  
gg.addListItems(fxdw)
end  

function gp(var)v={{address=var,flags=4}}return gg.getValues(v)end  

function cp()
c1 = gp(gg.getListItems(gg.getResultsCount())[1].address)[1]
gg.sleep(10)
l1=c1.value  
gg.sleep(10)
p=gg.getResults(gg.getResultsCount())
gg.sleep(10)
r={}
for i,v in ipairs(p)do  
r[#r+1]={address=v.address,flags=4,value=l1}
end  
gg.sleep(10)
gg.setValues(r)
gg.sleep(10)
end  

function warparts_instant()
if gg.getListItems(gg.getResultsCount())~=0 then gg.clearList() else end
FOOD_1_DANIEL_2()
bricks_daniel() 
cp()
abc()
end
GOLDEN_EGG_CASINO = 153804537


function FOOD_1_DANIEL_2()
if gg.getListItems(gg.getResultsCount())~=0 then gg.clearList() else end
findbuildingItemsPointer() local results = {};for i, one_Offset in ipairs(building_items_pointer.building_items) do results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_buildings_64bit or offset_buildings_32bit), flags = gg.TYPE_DWORD}end gg.loadResults(results) local y = gg.getResults(gg.getResultsCount()) gg.clearResults()local s = {}for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD end y = gg.getValues(y) for i in ipairs(y) do 
if y[i].value ==GOLDEN_EGG_CASINO then s = {{name = "GOLDEN EGG CASINO", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address 
w.flags = gg.TYPE_DWORD
end
gg.loadResults(n)
gg.addListItems(n)
bricks_daniel() 
cp()
abc()
end

function findPOPULATIONItemsPointer() 
if not POPULATION_items_pointer.POPULATION_items
then findItemsParentPointer()
local count_POPULATION_items_pointer = 75
local results, count_results ,fast = true
if informations.x64 then 
local POPULATION_items_pointer_position = 17
new_search(parent_pointers.items[POPULATION_items_pointer_position].address, gg.TYPE_QWORD) results, 
count_results = get_results(count_POPULATION_items_pointer)
if count_results == count_POPULATION_items_pointer
then POPULATION_items_pointer.POPULATION_items = results 
else gg.alert("Error: POPULATION Items pointer was not found")
fast = true
os.exit()
end
else
local POPULATION_items_pointer_position = 16
new_search(parent_pointers.items[POPULATION_items_pointer_position].address, gg.TYPE_DWORD) results,
count_results =  get_results(count_POPULATION_items_pointer) 
if count_results == count_POPULATION_items_pointer 
then POPULATION_items_pointer.POPULATION_items = results
else gg.alert("Error:POPULATION Items pointer was not found")
 fast = true
os.exit() 
end
end 
end
end

function findbuildingItemsPointer() 
if not building_items_pointer.building_items
then findItemsParentPointer()
local count_building_items_pointer = Building_counts
local results, count_results ,fast = true
if informations.x64 then 
local building_items_pointer_position = 15
new_search(parent_pointers.items[building_items_pointer_position].address, gg.TYPE_QWORD) results, 
count_results = get_results(count_building_items_pointer)
if count_results == count_building_items_pointer
then building_items_pointer.building_items = results 
else gg.alert("Error: buildings Items pointer was not found")
fast = true
os.exit()
end
else
local building_items_pointer_position = 14 
new_search(parent_pointers.items[building_items_pointer_position].address, gg.TYPE_DWORD) results,
count_results =  get_results(count_building_items_pointer) 
if count_results == count_building_items_pointer 
then building_items_pointer.building_items = results
else gg.alert("Error:building Items pointer was not found")
 fast = true
os.exit() 
end
end 
end
end

function findWarBoosterPointer()
if not war_booster_pointer.war then findItemsParentPointer() 
local count_war_booster_pointer = 41
local results, count_results 
if informations.x64 
then 
local war_booster_pointer_position = 49
new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_QWORD)results, 
count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer
 then war_booster_pointer.war = results   
 else findWarBoosterPointer1()
end
else 
local war_booster_pointer_position = 49
new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_DWORD)
 results, count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer 
then war_booster_pointer.war = results 
else 
findWarBoosterPointer1() 
end
end
end
end

function findWarBoosterPointer1()
if not war_booster_pointer.war then findItemsParentPointer() 
local count_war_booster_pointer = 21
local results, count_results 
if informations.x64 
then 
local war_booster_pointer_position = 49
new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_QWORD)results, 
count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer
 then war_booster_pointer.war = results   
 else gg.alert("Error: War Card item pointers was not found", "OK") 
os.exit() 
end
else 
local war_booster_pointer_position = 49
 new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_DWORD)
 results, count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer 
then war_booster_pointer.war = results 
else 
gg.alert("Error: War card item pointers was not found", "OK") os.exit() 
end
end
end
end

function findWarPartPointer()
if not war_part_pointer.war then findItemsParentPointer() 
local count_war_part_pointer = 12  
local results, count_results 
if informations.x64 
then 
local war_part_pointer_position = 32 
new_search(parent_pointers.items[war_part_pointer_position].address, gg.TYPE_QWORD)results, 
count_results = get_results(count_war_part_pointer)
 if count_results == count_war_part_pointer
 then war_part_pointer.war = results   
 else gg.alert("Error: War Parts item pointers was not found", "OK") 
local  fast = true
os.exit() 
end               
 else 
local war_part_pointer_position = 31 
new_search(parent_pointers.items[war_part_pointer_position].address, gg.TYPE_DWORD) 
results, count_results = get_results(count_war_part_pointer)
 if count_results == count_war_part_pointer 
then war_part_pointer.war = results 
else 
gg.alert("Error: War Parts item pointers was not found", "OK") 
os.exit() 
end
end
end
end

 function findProductionTimesPointer() 
if not production_times_pointer.production_times 
then findItemsParentPointer() 
local count_production_times_pointer = 108 
local results, count_results 
if informations.x64 
then 
local production_times_pointer_position = 18 
new_search(parent_pointers.items[production_times_pointer_position].address, gg.TYPE_QWORD) results, count_results = get_results(count_production_times_pointer) 
if count_results == count_production_times_pointer 
then production_times_pointer.production_times = results 
else gg.alert("Error: Production Times pointer was not found", "OK") 
os.exit()
end 

else 
local production_times_pointer_position = 17
new_search(parent_pointers.items[production_times_pointer_position].address, gg.TYPE_DWORD) results, count_results = get_results(count_production_times_pointer) 
if count_results == count_production_times_pointer 
then production_times_pointer.production_times = results 
else  gg.alert("Error: Production Times pointer was not found", "OK") 
os.exit()
end  
end 
end 
end

function findCommonItemsPointer() 
if not common_items_pointer.common_items
 then findItemsParentPointer()
 local count_common_items_pointer = normal_counter
 local results, count_results fast = true
if informations.x64 then 
local common_items_pointer_position = 16 
new_search(parent_pointers.items[common_items_pointer_position].address, gg.TYPE_QWORD) results, 
count_results = get_results(count_common_items_pointer)
if count_results == count_common_items_pointer
then common_items_pointer.common_items = results 
else gg.alert("Error: Common Items pointer was not found")
fast = true
os.exit()
end

else
local common_items_pointer_position = 15 
new_search(parent_pointers.items[common_items_pointer_position].address, gg.TYPE_DWORD) results,
 count_results =  get_results(count_common_items_pointer) 
  if count_results == count_common_items_pointer 
  then common_items_pointer.common_items = results
 else gg.alert("Error: Common Items pointer was not found")
 fast = true
os.exit() 
end
end 
end
end


function execute_alter_production_times()
findItemsParentPointer()
  findProductionTimesPointer()  
  production_times = {} for i, pointer in ipairs(production_times_pointer.production_times)
  do 
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_bit or offset_timers_32_bit)}
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_1 or offset_timers_32_1)}
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_2 or offset_timers_32_2)}
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_3 or offset_timers_32_3)}
gg.clearResults()
  end 
  gg.setValues(production_times) 
  gg.toast("success to alter production times") 
end 


function Production_daniel()  
local zz = {"1. NANO STORE","2. BUILDING STORE ","3. HARDWARESTORE","4.FARMERSMARKET","5. FURNITURE SHOP"," 6. GARDENING SUPPLY STORE","7. DONUT STORE ","8. FASHION STORE","9. FAST FOOD RESTAURANT","10. HOME APPLIANCES"," 11. SUNNY ISLES"," 12. GREEN VALLEY ZONE"," 13. CACTUS CANYON ZONE","14. FROZEN FJORD ZONE","15.LIMESTONE CLIFF ZONE","16. BUROCRATE BUILDING","17. SANTA SHOP","18. SPORT SHOP BUILDING","19. CHOCLATE SHOP","20.FARMERS SHOP","21. SELECT ALL","22. OPEN GAME GUARDIAN","23. BACK","24. EXIT"}
local z = gg.multiChoice(zz, nil,"PRODUCTIONS STORES") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then Nano_store() 
end 
if z[2] then Building_store()  
end
if z[3] then Hardware_store() 
end
if z[4] then Farmers_market() 
end
if z[5] then Furniture_shop()
end 
if z[6] then gardening_supplystore() 
end 
if z[7] then Donut_shop() 
end 
if z[8] then fashion_shop() 
end 
if z[9] then fast_food_restaurant() 
end 
if z[10] then home_appliances() 
end 
if z[11] then SUNNY_ISLES()
end 
if z[12] then GREEN_VALLEY()
end 
if z[13] then CACTUS_CANYON()
end 
if z[14] then FROZEN_FJORD()
end 
if z[15] then LIMESTONE_CLIFF()
end 
if z[16] then burocrate_building()
end
if z[17] then santa_shop()
end
if z[18] then sport_shop_building()
end
if z[19] then chocolate_shop()
end
if z[20] then farmer_shop()
end
if z[21] then sellect_all()
end 
if z[22] then eigth()
end 
if z[23] then Production_submenu()
end
if z[24] then exit()
end 
end 
end 
end

function Production_daniels()  
local zz = {"1. NANO STORE DANIEL","2. BUILDING STORE DANIEL","3. HARDWARESTORE DANIEL ","4.FARMERSMARKET DANIEL","5. FURNITURE SHOP DANIEL","6. GARDENING STORE DANIEL","7. DONUT STORE DANIEL ","8. FASHION STORE DANIEL","9. FAST FOOD RESTAURANT DANIEL","10. HOME APPLIANCES DANIEL","11. SUNNY ISLES DANIEL","12. GREEN VALLEY ZONE DANIEL"," 13. CACTUS CANYON ZONE DANIEL","14. FROZEN FJORD ZONE DANIEL ","15. LIMESTONE CLIFF ZONE DANIEL","16. BUROCRATE BUILDING DANIEL","17. SANTA SHOP DANIEL","18. SPORT SHOP BUILDING DANIEL","19.CHOCLATE SHOP DANIEL ","20.FARMERS SHOP DANIEL ","21. OPEN GAME GUARDIAN","22. BACK"," 23. EXIT"}
local z = gg.multiChoice(zz, nil,"Daniel menu") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then Nano_stores_daniels() 
end 
if z[2] then Building_store_daniel()  
end
if z[3] then Hardware_store_daniel() 
end
if z[4] then Farmers_market_daniel() 
end
if z[5] then Furniture_shop_daniel()
end 
if z[6] then gardening_supplystore_daniel() 
end 
if z[7] then Donut_shop_daniel() 
end 
if z[8] then fashion_shop_daniel() 
end 
if z[9] then fast_food_restaurant_daniel() 
end 
if z[10] then home_appliances_daniel() 
end 
if z[11] then SUNNY_ISLES_daniel()
end 
if z[12] then GREEN_VALLEY_daniel()
end 
if z[13] then CACTUS_CANYON_daniel()
end 
if z[14] then FROZEN_FJORD_daniel()
end 
if z[15] then LIMESTONE_CLIFF_daniel()
end 
if z[16] then burocrate_building_daniel()
end
if z[17] then santa_shop_daniel()
end
if z[18] then sport_shop_building_daniel()
end
if z[19] then chocolate_shop_daniel()
end
if z[20] then farmer_shop_daniel()
end
if z[21] then eigth()
end
 if z[22] then Production_submenu()
 end
if z[23] then exit()
end 
end 
end 
end

function sellect_all()  
normalpartchecklist() 
Nano_store_all_parts()
building_store_all()
Hardware_store_parts()
Farmers_market_parts()
Furniture_part_shop()
gardening_supply_store_parts()
Donut_shop_all()
Fashionshop_all_parts()
fast_food_restaurant_parts()
HOME_PARTS()
SUNNY_PARTS()
GREENVALLEY_PARTS()
CACTUS_PARTS()
FROSTY_PARTS()
LIMESTONE_CLIFF_PARTS()
burocrate_building_parts()
santa_shop_parts()
choclate_shop_parts()
sport_shop_building_part()
farmers_shop_parts()
ALL_AIRPORT()
eigth() 
end

function normalpartchecklist() 
normalpartchecklist1()
gg.refineNumber("3")  
normalpartchecklist2()
gg.clearResults()
gg.toast("Successfully ") 
end 

function normalpartchecklist1()
findCommonItemsPointer()
local Offset_one = gg.getResults(normal_counter) 
local results = {};
for i, one_Offset in ipairs(common_items_pointer.common_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_normal_part_checklist64 or offset_normal_part_checklist32), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results)
end 
function normalpartchecklist2()
local Offset_one = gg.getResults(normal_counter) 
local results = {};
for i, one_Offset in ipairs(Offset_one) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and -offset_normal_part_checklist64 or -offset_normal_part_checklist32), flags = gg.TYPE_DWORD}
end  
gg.addListItems(results)  
gg.clearResults()
end

function OffsetOne()
findCommonItemsPointer()
local Offset_one = gg.getResults(normal_counter)  
local results = {};
for i, one_Offset in ipairs(common_items_pointer.common_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results)  
end
 
function OffsetTwo() 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Nano_store()  
local zz = {"1. IRON","2. WOOD","3. PLASTIC","4. SEED","5. MINERALS ","6. CHEMICAL","7. TEXILE","8. GLASS","9. ANIMAL FEED","10. SUGAR AND SPICE","11. ELECTRIC COMPONENT ","12. NANO STORE ALL PARTS","13. OPEN GAME GUARDIAN","14. BACK"," 15. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then iron() 
end 
if z[2] then wood()
end
if z[3] then plastic()
end
if z[4] then seed()
end
if z[5] then minerals()
end
if z[6] then chemical()
end
if z[7] then texile()
end
if z[8] then glass()
end
if z[9] then animalfeed()
end
if z[10] then sugar_and_spice()
end
if z[11] then electriccomp()
end
if z[12] then Nano_store_all_parts()
end
if z[13] then eigth()
end
if z[14] then Mainmenu() 
end
if z[15] then exit()
end 
end 
end
end

function Nano_store_all_parts()
iron() 
wood()
plastic()
seed()
minerals()
chemical()
texile()
glass()
animalfeed()
sugar_and_spice()
electriccomp()
end

function Nano_stores_daniels()  
local zz = {"1. IRON DANIEL","2. WOOD DANIEL","3. PLASTIC DANIEL","4. SEED DANIEL","5. MINERALS  DANIEL","6. CHEMICAL DANIEL","7. TEXILE DANIEL","8. GLASS DANIEL","9. ANIMAL FEED DANIEL","10. SUGAR AND SPICE DANIEL","11. ELECTRIC COMPONENT DANIEL","12. OPEN GAME GUARDIAN","13. BACK","14. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then iron_daniel() 
end 

if z[2] then wood_daniel()
end

if z[3] then plastic_daniel()
end

if z[4] then seed_daniel()
end

if z[5] then minerals_daniel()
end

if z[6] then chemical_daniel()
end

if z[7] then texile_daniel()
end

if z[8] then glass_daniel()
end

if z[9] then animalfeed_daniel()
end

if z[10] then sugar_and_spice_daniel()
end

if z[11] then electriccomp_daniel()
end

if z[12] then eigth()
end 

if z[13] then Mainmenu()
end 
if z[14] then exit()
end 
end 
end
end

function iron_daniel()
 findCommonItemsPointer() 
common_items = {};
local message ,fast
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 267176888
 local s = {} 
for i in ipairs(y) 
do y[i].address = y[i].address 
y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address 
w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function iron() 
findCommonItemsPointer()
local Offset_one = gg.getResults(113) 
local results = {};
for i, one_Offset in ipairs(common_items_pointer.common_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results) 
 local y = gg.getResults(gg.getResultsCount()) 
gg.clearResults() 
local x = 267176888
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address 
y[i].flags = gg.TYPE_DWORD 
 end 
 y = gg.getValues(y) 
 for i in ipairs(y) do 
if y[i].value == x then 
s = {{name = "IRON", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL IRON") 
end

function wood_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090874750
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function wood()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090874750
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "WOOD", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WOOD") 
end

function plastic()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1270634091
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "PLASTIC", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PLASTIC") 
end

function plastic_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1270634091
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function seed()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274276185
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SEED", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SEED") 
end

function seed_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274276185
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)  
end


function minerals()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1369888960
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MINERALS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MINERALS") 
end

function minerals_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1369888960
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function chemical()
findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1570439054
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHEMICAL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHEMICAL") 
end

function chemical_daniel() 
findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1570439054
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function texile()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 144394935
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "TEXILE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TEXILE") 
end

function texile_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 144394935
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function glass()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 260292831
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then  s = {{name = "GLASS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GLASS") 
end

function glass_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 260292831
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function animalfeed()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1658060491
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "ANIMAL FEED", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ANIMAL FEED") 
end

function animalfeed_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1658060491
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function sugar_and_spice()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1807545838
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SUGAR AND SPICE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SUGAR AND SPICE") 
end

function sugar_and_spice_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1807545838
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end


function electriccomp()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -181617693
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "ELECTRIC COMPOMENT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ELECTRIC COMPOMENT") 
end

function electriccomp_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -181617693
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end


function Building_store()   
local zz = {"1. NAIL","2. PLANKS","3. BRICKS","4. CEMENT","5. GLUE ","6. PAINT","7.BUILDING STORE ALL"," 8. OPEN GAME GUARDIAN","9. BACK"," 10. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then nail() 
end 
if z[2] then planks()
end
if z[3] then bricks()
end
if z[4] then cement()
end
if z[5] then glue()
end
if z[6] then paint()
end
if z[7] then building_store_all()
end 
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function building_store_all()
nail() 
planks()
bricks()
cement()
glue()
paint()
end

function Building_store_daniel()   
local zz = {"1. NAILS DANIEL","2. PLANKS DANIEL","3. BRICKS DANIEL","4. CEMENT DANIEL","5. GLUE DANIEL","6. PAINT DANIEL.","7.OPEN GAME GUARDIAN","8. BACK"," 9. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 


if z[1] then nail_daniel()
end

if z[2] then planks_daniel()
end

if z[3] then bricks_daniel()
end

if z[4] then cement_daniel()
end

if z[5] then glue_daniel()
end
if z[6] then paint_daniel()
end 
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end 
if z[9] then exit()
end 
end 
end
end

function nail()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 268207452
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then  
s = {{name = "NAIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL NAIL") 
end

function nail_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 268207452
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function planks()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 351941774
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "PLANKS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PLANKS") 
end

function planks_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 351941774
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end


function bricks()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -188562685
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "BRICKS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BRICKS") 
end

function bricks_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -188562685
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end


function cement()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -164698239
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CEMENT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CEMENT") 
end

function cement_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -164698239
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function glue()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090296690
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GLUE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GLUE") 
end

function glue_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090296690
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function paint()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270579361
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PAINT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PAINT") 
end

function paint_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270579361
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Hardware_store()   
local zz = {"1. HAMMER","2. MEASURING TAPE","3. SHOVEL","4. COOKING UNTENSILS","5. LADDER ","6. DRILL","7. HARDWARE STORE PARTS ","8. OPEN GAME GUARDIAN","9. BACK","10.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then hammer() 
end 
if z[2] then measuring_tape()
end
if z[3] then shovel()
end
if z[4] then cooking_untensils()
end
if z[5] then ladder()
end
if z[6] then drill()
end
if z[7] then Hardware_store_parts()
end
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function Hardware_store_daniel()   
local zz = {"1.  HAMMER DANIEL","2. MEASURING TAPE DANIEL","3. SHOVEL DANIEL","4 COOKING UNTENSILS DANIEL","5. LADDER DANIEL","6. DRILL DANIEL","7. OPEN GAME GUARDIAN","8. BACK","9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then hammer_daniel()
end

if z[2] then measuring_tape_daniel()
end

if z[3] then shovel_daniel()
end

if z[4] then cooking_untensils_daniel()
end

if z[5] then ladder_daniel()
end
if z[6] then drill_daniel() 
end 
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end  
if z[9] then exit()
end 
end 
end
end
function Hardware_store_parts()
hammer() 
measuring_tape()
cooking_untensils()
shovel()
ladder()
drill()
end

function hammer()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 26243455
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "HAMMER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HAMMER") 
end

function hammer_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 26243455
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function measuring_tape_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -297136870
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function measuring_tape()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -297136870
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MEASURING TAPE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MEASURING TAPE") 
end

function shovel_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 465115894
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function shovel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 465115894
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "SHOVEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SHOVEL") 
end

function cooking_untensils_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1799827558
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cooking_untensils()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1799827558
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COOKING UNTENSILS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COOKING UNTENSILS") 
end

function ladder_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 182451793
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function ladder()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 182451793
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "LADDER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LADDER") 
end

function drill_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 256959164
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function drill()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 256959164
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "DRILL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL DRILL") 
end

function Farmers_market()   
local zz = {"1. VEGETABLES","2. FLOURBAG ","3. FRUIT AND BERRIES","4. BEEF","5. CHEESE ","6. CORN","7. CREAM","8. FARMERS MARKET PARTS ","9. OPEN GAME GUARDIAN","10. BACK","11. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then Vegetables() 
end 
if z[2] then Flourbag()
end

if z[3] then fruit_and_berries()
end

if z[4] then beef()
end

if z[5] then cheese()
end

if z[6] then corn()
end

if z[7] then cream()
end

if z[8] then Farmers_market_parts()
end
if z[9]then eigth()
end 
if z[10] then Mainmenu()
end  
if z[11] then exit()
end 
end 
end
end

function Farmers_market_daniel()   
local zz = {"1. VEGETABLES DANIEL","2. FLOURBAG DANIEL","3. FRUIT AND BERRIES DANIEL","4. BEEF DANIEL","5. CHEESE DANIEL","6. CORN DANIEL","7. CREAM DANIEL","8. OPEN GAME GUARDIAN","9. BACK","10. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then Vegetables_daniel()
end
if z[2] then Flourbag_daniel()
end
if z[3] then fruit_and_berries_daniel()
end
if z[4] then beef_daniel()
end
if z[5] then cheese_daniel()
end
if z[6] then corn_daniel() 
end 
if z[7] then cream_daniel() 
end 
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function Farmers_market_parts()
Vegetables() 
Flourbag()
fruit_and_berries()
beef()
cheese()
corn()
cream()
end

function Vegetables_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1970978713
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Vegetables()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1970978713
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "VEGETABLES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL VEGETABLES") 
end

function Flourbag_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2127979990
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Flourbag()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2127979990
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "FLOURBAG", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FLOURBAG") 
end

function fruit_and_berries_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1447646651
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function fruit_and_berries()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1447646651
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FRUIT AND BERRIES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FRUIT AND BERRIES") 
end

function beef_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090108855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function beef()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090108855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "BEEF", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BEEF") 
end

function cheese_daniel()
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161427822
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cheese()
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161427822
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHEESE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHEESE") 
end

function corn_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090156119
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function corn()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090156119
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CORN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CORN") 
end

function cream_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255768525 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function cream()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255768525 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CREAM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CREAM") 
end

function Furniture_shop()   
local zz = {"1. CHAIRS","2. TABLES ","3. HOME TEXILES","4. COUCH","5. CUPBOARD ","6. FURNITURE PART SHOP","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chairs() 
end 
if z[2] then Tables()
end
if z[3] then Home_texiles()
end
if z[4] then couch()
end
if z[5] then cupboard()
end
if z[6] then Furniture_part_shop()
end
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end  
if z[9] then exit()
end 
end 
end
end

function Furniture_shop_daniel()   
local zz = {"1.  CHAIRS DANIEL","2. TABLES DANIEL","3. HOME TEXILES DANIEL","4. COUCH DANIEL","5. CUPBOARD DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chairs_daniel()
end

if z[2] then Tables_daniel()
end

if z[3] then Home_texiles_daniel()
end

if z[4] then couch_daniel()
end

if z[5] then cupboard_daniel()
end

if z[6]then eigth()
end 
if z[7] then Mainmenu()
end  
if z[8] then exit()
end 
end 
end
end

function Furniture_part_shop()
chairs() 
Tables()
Home_texiles()
couch()
cupboard()
end 

function chairs_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161567233
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function chairs()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161567233
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHAIRS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHAIRS") 
end

function Tables_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 495471776
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Tables()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 495471776
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TABLES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TABLES") 
end

function Home_texiles_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1228123200
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function Home_texiles()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1228123200
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "HOME TEXILES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HOME TEXILES") 
end

function couch_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255678199
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function couch()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or 0x2c)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255678199
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COUCH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COUCH") 
end

function cupboard_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or 0x2c)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 334762709
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cupboard()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 334762709
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CUPBOARD", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CUPBOARD") 
end

function gardening_supplystore()   
local zz = {"1. GRASS","2. TREE SAMPLING ","3. GARDEN FURNITURE","4. FIRE PIT","5. GARDEN NOMES ","6. LAWNMOVER","7. GARDENING SUPPLY STORE PARTS","8. OPEN GAME GUARDIAN","9.  BACK"," 10.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then grass() 
end 
if z[2] then tree_sampling()
end
if z[3] then garden_furniture()
end
if z[4] then firepit()
end
if z[5] then garden_nomes()
end
if z[6] then lawnmover()
end
if z[7] then gardening_supply_store_parts()
end
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function gardening_supplystore_daniel()   
local zz = {"1. GRASS DANIEL","2. TREE SAMPLING DANIEL","3.GARDEN FURNITURE DANIEL","4. FIREPIT DANIEL","5. GARDEN NOMES DANIEL","6. LAWNMOVER DANIEL","7.OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then grass_daniel()
end

if z[2] then tree_sampling_daniel()
end

if z[3] then garden_furniture_daniel()
end

if z[4] then firepit_daniel()
end

if z[5] then garden_nomes_daniel()
end

if z[6] then lawnmover_daniel()
end
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end  
if z[9] then exit()
end 
end 
end
end
function gardening_supply_store_parts()
grass() 
tree_sampling()
garden_furniture()
firepit()
garden_nomes()
lawnmover()
end

function grass_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =260508453 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function grass()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =260508453 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GRASS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GRASS") 
end

function tree_sampling_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -788997290
 local s = {} 
for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tree_sampling()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -788997290
 local s = {} 
for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then  
s = {{name = "TREE SAMPLING", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TREE SAMPLING") 
end

function garden_furniture_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1125663546
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function garden_furniture()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1125663546
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GARDEN FURNITURE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GARDEN FURNITURE") 
end

function firepit_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1398164872
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function firepit()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1398164872
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FIRE PIT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FIRE PIT") 
end

function garden_nomes_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 566656095
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function garden_nomes()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 566656095
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GARDEN NOMES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GARDEN NOMES") 
end

function lawnmover_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1818945505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function lawnmover()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1818945505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "LAWNMOVER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LAWNMOVER") 
end
function Donut_shop()   
local zz = {"1. DONUT","2. GREEN SMOOTHIE ","3. BREADROLL","4. CHERRY CHEESECAKE","5. FROZEN YOGURT","6. COFFEE","7. DONUT SHOP ALL","8. OPEN GAME GUARDIAN","9.  BACK"," 10.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then donut() 
end 
if z[2] then green_smoothie()
end
if z[3] then breadroll()
end
if z[4] then cherry_cheesecake()
end
if z[5] then frozen_yogurt()
end
if z[6] then coffee()
end
if z[7] then Donut_shop_all()
end
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function Donut_shop_daniel()   
local zz = {"1. DONUT DANIEL","2. GREEN SMOOTHIE DANIEL","3.BREADROLL DANIEL","4. CHERRY CHEESECAKE DANIEL","5. FROZEN YOGURT DANIEL","6. COFFEE DANIEL","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then donut_daniel()
end

if z[2] then green_smoothie_daniel()
end

if z[3] then breadroll_daniel()
end

if z[4] then cherry_cheesecake_daniel()
end

if z[5] then frozen_yogurt_daniel()
end

if z[6] then coffee_daniel()
end
if z[7]then eigth()
end 
if z[8] then Mainmenu()  
end
if z[9] then exit()
end 
end 
end
end

function Donut_shop_all()
donut()
green_smoothie()
breadroll()
cherry_cheesecake()
frozen_yogurt()
coffee()
end

function donut_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-113650078 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function donut()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-113650078 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "DONUT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL DONUT") 
end

function green_smoothie_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1593061790
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function green_smoothie()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1593061790
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GREEN SMOOTHIE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GREEN SMOOTHIE") 
end

function breadroll_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 123794044
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function breadroll()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 123794044
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "BREADROLL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BREADROLL") 
end

function cherry_cheesecake_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -466890509
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cherry_cheesecake()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -466890509
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CHERRY CHEESECAKE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHERRY CHEESECAKE") 
end

function frozen_yogurt_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -325591165
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function frozen_yogurt()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -325591165
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FROZEN YOGURT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FROZEN YOGURT") 
end

function coffee_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -153089811
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function coffee()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -153089811
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COFFEE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COFFEE") 
end


function fashion_shop()   
local zz = {"1. CAP","2. SHOES ","3. WATCH","4. BUSSINESS SUITS","5. BACKPACK ","6.FASHIONSHOP ALL PARTS","7. OPEN GAME GUARDIAN","8. BACK","9. EXIT"} 
local z = gg.multiChoice(zz, nil,"FASHION") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then cap() 
end 
if z[2] then shoes()
end
if z[3] then watch()
end
if z[4] then suits()
end
if z[5] then backpack()
end
if z[6] then Fashionshop_all_parts()
end 
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end 
if z[9] then exit()
end 
end 
end
end

function fashion_shop_daniel()   
local zz = {"1. CAP DANIEL","2. SHOES DANIEL","3. WATCH DANIEL","4. BUSSINESS SUITS DANIEL","5. BACKPACK DANIEL","6. OPEN GAME GUARDIAN","7. BACK","8. EXIT"} 
local z = gg.multiChoice(zz, nil,"FASHION DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then cap_daniel()
end
if z[2] then shoes_daniel()
end
if z[3] then watch_daniel()
end
if z[4] then suits_daniel()
end
if z[5] then backpack_daniel()
end
if z[6]then eigth()
end 
if z[7] then Mainmenu()
end 
if z[8] then exit()
end  
end
end
end

function Fashionshop_all_parts()
cap()
shoes()
watch()
suits()
backpack()
end

function cap_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1534432269
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cap()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1534432269
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CAP", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CAP") 
end

function shoes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274394919
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function shoes()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274394919
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SHOES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SHOES") 
end

function watch_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1018293267
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function watch()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1018293267
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "WATCH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WATCH") 
end

function suits_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =  -1408194775
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function suits()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1408194775
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SUITS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SUITS") 
end

function backpack_daniel()
findCommonItemsPointer()common_items = {} for i, pointer in ipairs(common_items_pointer.common_items) do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} end gg.loadResults(common_items)local y = gg.getResults(gg.getResultsCount())gg.clearResults() 
local x = 108385717 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD end y = gg.getValues(y) for i in ipairs(y) do 
if y[i].value == x then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) end

function backpack()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 108385717
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "BACKPACK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BACKPACK") 
end

function fast_food_restaurant()   
local zz = {"1. FRIES","2. PIZZA ","3. HAMBURGER","4. ICE CREAM SANDWICH","5. LEMONADE ","6. POPCORN","7FAST FOOD RESTAURANT PARTS","8.OPEN GAME GUARDIAN","9. BACK"," 10. EXIT"} 
local z = gg.multiChoice(zz, nil,"FAST FOOD RESTAURANT") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fries() 
end 
if z[2] then pizza()
end

if z[3] then hamburger()
end

if z[4] then icecream_sandwich() 
end

if z[5] then lemonade()
end

if z[6] then popcorn()
end

if z[7] then fast_food_restaurant_parts()
end
if z[8]then eigth()
end 
if z[10] then exit()
end 
if z[9] then Mainmenu()
end 
 if zz[9] then Production_daniel()  
end 
end 
end
end

function fast_food_restaurant_daniel()   
local zz = {"1. FRIES DANIEL","2. PIZZA DANIEL","3.HAMBURGER DANIEL","4. ICE CREAM SANDWICH DANIEL","5. LEMONADE DANIEL","6. POPCORN DANIEL","7.OPEN GAME GUARDIAN","8. BACK"," 9. EXIT"} 
local z = gg.multiChoice(zz, nil,"FAST FOOD RESTAURANT DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fries_daniel()
end

if z[2] then pizza_daniel()
end

if z[3] then hamburger_daniel()
end

if z[4] then icecream_sandwich_daniel()
end

if z[5] then lemonade_daniel()
end

if z[6] then popcorn_daniel()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if zz[8] then Production_daniel()  
end 
end 
end
end

function fast_food_restaurant_parts()
fries()
pizza()
hamburger()
icecream_sandwich()
lemonade()
popcorn()
end

function fries_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-719795061 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function fries()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-719795061 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " FRIES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FRIES") 
end

function pizza_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270885747
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function pizza()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270885747
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "PIZZA", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PIZZA") 
end

function hamburger_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1799384545
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function hamburger()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1799384545
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "HAMBURGER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HAMBURGER") 
end

function icecream_sandwich_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -712060721
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function icecream_sandwich()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -712060721
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "ICE CREAM SANDWICH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ICE CREAM SANDWICH") 
end

function lemonade_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -265079577
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function lemonade()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -265079577
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "LEMONADE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LEMONADE") 
end

function popcorn_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1136019226
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end  
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function popcorn()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1136019226
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "POPCORN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL POPCORN") 
end

function home_appliances()   
local zz = {"1. BBQ GRILL","2. REFRIGERATOR ","3. LIGHTING SYSTEM ","4. TV","5. MICROWAVE OVEN ","6. HOME PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"HOME APPLIANCES") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then BBQ_GRILL() 
end 
if z[2] then REFRIGERATOR()
end

if z[3] then LIGHTING_SYSTEM()
end

if z[4] then TV()
end

if z[5] then MICROWAVE_OVEN()
end

if z[6] then HOME_PARTS()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if zz[8] then Production_daniel()  
end 
end 
end
end

function home_appliances_daniel()   
local zz = {"1. BBQ GRILL DANIEL","2. REFRIGERATOR DANIEL","3. LIGHTING SYSTEM DANIEL","4. TV DANIEL","5. MICROWAVE OVEN DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"HOME APPLIANCES DANIEL") 
if z ~= nil then 
if seven(z) >0 then 


if z[1] then BBQ_GRILL_daniel()
end

if z[2] then REFRIGERATOR_daniel()
end

if z[3] then LIGHTING_SYSTEM_daniel()
end

if z[4] then TV_daniel()
end

if z[5] then MICROWAVE_OVEN_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if z[7] then Production_daniel()  
end 
end 
end
end

function HOME_PARTS()
BBQ_GRILL() 
REFRIGERATOR()
LIGHTING_SYSTEM()
TV()
MICROWAVE_OVEN()
end

function BBQ_GRILL_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1943086388
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function BBQ_GRILL()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1943086388
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "BBQ_GRILL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL IRON") 
end

function REFRIGERATOR_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 298050001
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function REFRIGERATOR()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 298050001
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "REFRIGERATOR", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL REFRIGERATOR") 
end

function LIGHTING_SYSTEM_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1494660480
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function LIGHTING_SYSTEM()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1494660480
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "LIGHTING SYSTEM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LIGHTING SYSTEM") 
end

function TV_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 5863855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function TV()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 5863855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TV", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TV") 
end

function MICROWAVE_OVEN_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1171629674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function MICROWAVE_OVEN()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1171629674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MICROWAVE OVEN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MICROWAVE OVEN") 
end

function SUNNY_ISLES()   
local zz = {"1. COCONUT","2. COCONUT OIL ","3. FACE CREAM ","4. TROPICAL DRINK","5. SUNNY PARTS","6. OPEN GAME GUARDIAN","7. BACK","8. EXIT"} 
local z = gg.multiChoice(zz, nil,"SUNNY ISLES") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then coconut() 
end 
if z[2] then coconut_oil()
end

if z[3] then face_cream()
end

if z[4] then tropical_drink()
end

if z[5] then SUNNY_PARTS()
end 

if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function SUNNY_ISLES_daniel()   
local zz = {"1. COCONUT","2. COCONUT OIL","3. FACE CREAM ","4. TROPICAL DRINK","5. OPEN GAME GUARDIAN","6. BACK"," 7. EXIT"} 
local z = gg.multiChoice(zz, nil,"SUNNY ISLES DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then coconut_daniel()
end
if z[2] then coconut_oil_daniel()
end
if z[3] then face_cream_daniel()
end
if z[4] then tropical_drink_daniel()
end
if z[5]then eigth()
end 
if z[8] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function SUNNY_PARTS()
coconut()
coconut_oil()
face_cream()
tropical_drink()
end

function coconut_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -760220352
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function coconut()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -760220352
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COCONUT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COCONUT") 
end

function coconut_oil_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 248304484
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function coconut_oil()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 248304484
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "COCONUT OIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COCONUT OIL") 
end

function face_cream_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1740539876
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function face_cream()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1740539876
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "FACE CREAM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FACE CREAM") 
end

function tropical_drink_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 449644219
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tropical_drink()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 449644219
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "TROPICAL DRINK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TROPICAL DRINK") 
end

function GREEN_VALLEY()   
local zz = {"1. RECYLCE FABRIC","2. REUSEABLE_BAG ","3. YOGA MATS ","4. TV","5. GREENVALLEY PARTS","6 OPEN GAME GUARDIAN","7. BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"GREEN VALLEY") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then recylce_fabric() 
end 
if z[2] then reuseable_bag()
end
if z[3] then yoga_mats()
end
if z[4] then ecological_shoes()
end
if z[5] then GREENVALLEY_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function GREEN_VALLEY_daniel()   
local zz = {"1. RECYLCE FABRIC DANIEL","2. REUSEABLE BAG DANIEL","3. YOGA MATS DANIEL","4. ECOLOGICAL SHOES DANIEL","5. OPEN GAME GUARDIAN","6. BACK"," 7.EXIT"} 
local z = gg.multiChoice(zz, nil,"GREEN VALLEY DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then recylce_fabric_daniel()
end
if z[2] then reuseable_bag_daniel()
end
if z[3] then yoga_mats_daniel()
end
if z[4] then ecological_shoes_daniel()
end
if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function GREENVALLEY_PARTS()
recylce_fabric()
reuseable_bag()
yoga_mats()
ecological_shoes()
end

function recylce_fabric_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1480795913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function recylce_fabric()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1480795913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "RECYLCE FABRIC", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL RECYLCE FABRIC") 
end

function reuseable_bag_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1553334434
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function reuseable_bag()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1553334434
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "REUSEABLE BAG", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL REUSEABLE BAG") 
end

function yoga_mats_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1886510007
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function yoga_mats()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1886510007
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "YOGA MATS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL YOGA MATS") 
end

function ecological_shoes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2118495682
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function ecological_shoes()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2118495682
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "ECOLOGICAL SHOES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ECOLOGICAL SHOES") 
end

function CACTUS_CANYON()   
local zz = {"1. CRUDE OIL","2. MOTOR OIL ","3. CAR WHEEL ","4. ENGINE","5. CACTUS_PARTS","6. OPEN GAME GUARDIAN","7.  BACK"," 8 .EXIT"} 
local z = gg.multiChoice(zz, nil,"CACTUS CANYON") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crude_oil() 
end 
if z[2] then motor_oil()
end
if z[3] then car_wheel()
end
if z[4] then engine()
end
if z[5] then CACTUS_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function CACTUS_CANYON_daniel()   
local zz = {"1. CRUDE OIL DANIEL","2. MOTOR_OIL DANIEL","3. CAR WHEEL DANIEL","4. ENGINE  DANIEL","5. OPEN GAME GUARDIAN","6. BACK"," 7.EXIT"} 
local z = gg.multiChoice(zz, nil,"CACTUS CANYON DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crude_oil_daniel()
end
if z[2] then motor_oil_daniel()
end

if z[3] then car_wheel_daniel()
end

if z[4] then engine_daniel()
end

if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function CACTUS_PARTS()
crude_oil() 
motor_oil()
car_wheel()
engine()
end

function crude_oil_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 953030492
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function crude_oil()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 953030492
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CRUDE OIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CRUDE OIL") 
end

function motor_oil_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1964329030
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function motor_oil()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1964329030
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MOTOR OIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MOTOR OIL") 
end

function car_wheel_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1290152913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function car_wheel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1290152913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CAR WHEEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CAR WHEEL") 
end

function engine_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -75965445
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function engine()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -75965445
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "ENGINE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ENGINE") 
end

function FROZEN_FJORD()   
local zz = {"1. FISH","2. CANNED FISH ","3. FISH SOUP ","4. SALMON SANDWICH","5. FROSTY PARTS","6. OPEN GAME GUARDIAN","11.  BACK"," 12.EXIT"} 
local z = gg.multiChoice(zz, nil,"FROZEN FJORD") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fish() 
end 
if z[2] then canned_fish()
end
if z[3] then fish_soup()
end
if z[4] then salmon_sandwich()
end
if z[5] then FROSTY_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function FROZEN_FJORD_daniel()   
local zz = {"1. FISH DANIEL","2. CANNED FISH  DANIEL","3. FISH SOUP DANIEL","4. SALMON SANDWICH DANIEL","5. OPEN GAME GUARDIAN","6. BACK","7. EXIT"} 
local z = gg.multiChoice(zz, nil,"FROZEN FJORD DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fish_daniel()
end
if z[2] then canned_fish_daniel()
end
if z[3] then fish_soup_daniel()
end
if z[4] then salmon_sandwich_daniel()
end
if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function FROSTY_PARTS()
fish() 
canned_fish()
fish_soup()
salmon_sandwich()
end

function fish_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090257423
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function fish()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090257423
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "FISH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FISH") 
end

function canned_fish_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1939782264
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function canned_fish()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1939782264
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CANNED FISH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CANNED FISH") 
end

function fish_soup_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1148007126
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function fish_soup()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1148007126
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "FISH SOUP", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FISH SOUP") 
end


function salmon_sandwich_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1321484032
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function salmon_sandwich()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1321484032
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SALMON SANDWICH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SALMON SANDWICH") 
end

function LIMESTONE_CLIFF()   
local zz = {"1. SILK","2. FAN ","3. ROBE ","4. STRING","5. LIMESTONE CLIFF PARTS","6.OPEN GAME GUARDIAN","7. BACK","8. EXIT "} 
local z = gg.multiChoice(zz, nil,"LIMESTONE CLIFF") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then silk()  
end 
if z[2] then fan()
end
if z[3] then robe()
end
if z[4] then string()
end
if z[5] then LIMESTONE_CLIFF_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function LIMESTONE_CLIFF_daniel()   
local zz = {"1.SILK","2. FAN DANIEL","3. ROBE DANIEL","4. STRING DANIEL","5. OPEN GAME GUARDAIN","6. BACK"," 7. EXIT"} 
local z = gg.multiChoice(zz, nil,"LIMESTONE CLIFF DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then silk_daniel()
end
if z[2] then fan_daniel()
end
if z[3] then robe_daniel()
end
if z[4] then string_daniel()
end
if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function LIMESTONE_CLIFF_PARTS()
silk() 
fan()
robe()
string()
end

function silk_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090724376
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function silk()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090724376
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SILK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SILK") 
end

function fan_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 193491386
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
os.exit()
end

function fan()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 193491386
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "FAN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FAN") 
end

function robe_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090694637
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function robe()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090694637
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "ROBE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ROBE") 
end

function string_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 479440892
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function string()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 479440892
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "STRING", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL STRING") 
end

function burocrate_building()   
local zz = {"1. CRAVE WOOD","2. WROUGTH IRON","3. CHISSELED STONE","4. STAIN GLASS","5. TAPESTRY ","6. BUROCRATE BUILDING PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"BUROCRATE BUILDING") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crave_wood() 
end 
if z[2] then wrougth_iron()
end
if z[3] then chisseled_stone()
end
if z[4] then  stain_glass()
end

if z[5] then tapestry()
end

if z[6] then burocrate_building_parts()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function burocrate_building_daniel()   
local zz = {"1. CRAVE WOOD DANIEL","2. WROUGTH IRON DANIEL","3. CHISSELED STONE DANIEL","4. STAIN GLASS DANIEL","5. TAPESTRY DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"BUROCRATE BUILDING DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crave_wood_daniel()
end
if z[2] then wrougth_iron_daniel()
end
if z[3] then chisseled_stone_daniel()
end
if z[4] then stain_glass_daniel()
end
if z[5] then tapestry_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function burocrate_building_parts()
crave_wood() 
wrougth_iron()
chisseled_stone()
stain_glass()
tapestry()
end

function crave_wood_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1937678477
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function crave_wood()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1937678477
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CRAVE WOOD", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CRAVE WOOD") 
end

function wrougth_iron_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 636979469
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function wrougth_iron() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 636979469
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "WROUGTH IRON", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WROUGTH IRON") 
end

function chisseled_stone_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1990081263
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function chisseled_stone()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1990081263
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHISSELED STONE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHISSELED STONE") 
end

function stain_glass_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -422625305
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function stain_glass()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -422625305
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "STAIN GLASS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL STAIN GLASS") 
end

function tapestry_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1057013087
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tapestry()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1057013087
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TAPESTRY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TAPESTRY") 
end

function santa_shop()
local zz = {"1. TOY HORSE","2. HOLIDAY DECORATIONS","3. CANDY CANE","4. GINGERBEARD MAN","5. HOLIDAY ORNAMENTS ","6. SANTA SHOP PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"SANTA SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then toy_horse() 
end 
if z[2] then holiday_decorations()
end
if z[3] then candy_cane()
end
if z[4] then  gingerbeard_man()
end

if z[5] then holiday_ornaments()
end

if z[6] then santa_shop_parts()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function santa_shop_daniel()
local zz = {"1. TOY HORSE DANIEL","2.  HOLIDAY DECORATIONS DANIEL","3. CANDY CANE DANIEL","4. GINGERBEARD MAN DANIEL","5. HOLIDAY ORNAMENTS DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"SANTA SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then toy_horse_daniel()
end
if z[2] then  holiday_decorations_daniel()
end
if z[3] then candy_cane_daniel()
end
if z[4] then gingerbeard_man_daniel()
end
if z[5] then holiday_ornaments_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function santa_shop_parts()
toy_horse() 
holiday_decorations()
candy_cane()
gingerbeard_man()
holiday_ornaments()
end

function toy_horse_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =2090767284
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function toy_horse()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090767284
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TOY HORSE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TOY HORSE") 
end

function holiday_decorations_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 614594674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function holiday_decorations() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 614594674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " HOLIDAY DECORATIONS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL  HOLIDAY DECORATIONS") 
end

function candy_cane_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2000852277
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function candy_cane()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2000852277
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CANDY CANE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CANDY CANE") 
end

function gingerbeard_man_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -942334081
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function gingerbeard_man()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -942334081
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GINGERBEARD MAN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GINGERBEARD MAN") 
end

function holiday_ornaments_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1661902171
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function holiday_ornaments()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =1661902171
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "HOLIDAY ORNAMENTS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HOLIDAY ORNAMENTS") 
end

function sport_shop_building()
local zz = {"1. TENNIS RACKET","2. SPORTS DRINK ","3. FOOTBALL SHOES","4. PROTEIN BAR","5. PING PONG TABLE ","6. SPORT SHOP BUILDING PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"SPORT SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then tennis_racket() 
end 
if z[2] then sports_drink()
end
if z[3] then football_shoes()
end
if z[4] then  protein_bar()
end

if z[5] then ping_pong_table()
end
if z[6] then sport_shop_building_part()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function sport_shop_building_daniel()
local zz = {"1. TENNIS RACKET DANIEL","2.  SPORTS DRINK DANIEL","3. FOOTBALL SHOES DANIEL","4. PROTEIN BAR DANIEL","5. PING PONG TABLE DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"SPORT SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then tennis_racket_daniel()
end
if z[2] then  sports_drink_daniel()
end
if z[3] then football_shoes_daniel()
end
if z[4] then protein_bar_daniel()
end
if z[5] then ping_pong_table_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function sport_shop_building_part()
tennis_racket() 
sports_drink()
football_shoes()
protein_bar()
ping_pong_table()
end

function tennis_racket_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =2062064496
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tennis_racket()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2062064496
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TENNIS RACKET", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TENNIS RACKET") 
end

function sports_drink_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1156262088
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function sports_drink() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1156262088
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " SPORTS DRINK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL  SPORTS DRINK") 
end

function football_shoes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1846238891 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function football_shoes()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1846238891
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "FOOTBALL SHOES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FOOTBALL SHOES") 
end

function protein_bar_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 518625563
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function protein_bar()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 518625563
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PROTEIN BAR", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PROTEIN BAR") 
end

function ping_pong_table_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1683538769
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function ping_pong_table()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1683538769
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PING PONG TABLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PING PONG TABLE") 
end

function chocolate_shop()
local zz = {"1. CHOCLATE BAR","2. JELLY BEANS ","3. EASTER BASKET","4. CHOCOLATE EGG","5. FRUIT CAKE ","6. CHOCLATE SHOP PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"CHOCOLATE SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chocolate_bar() 
end 
if z[2] then jelly_beans()
end
if z[3] then easter_basket()
end
if z[4] then  chocolate_egg()
end
if z[5] then fruit_cake()
end
if z[6] then choclate_shop_parts()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function chocolate_shop_daniel()
local zz = {"1. CHOCOLATE BAR DANIEL","2.  JELLY BEANS DANIEL","3. EASTER BASKET DANIEL","4. CHOCOLATE EGG DANIEL","5. FRUIT CAKE DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"CHOCOLATE SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chocolate_bar_daniel()
end
if z[2] then  jelly_beans_daniel()
end
if z[3] then easter_basket_daniel()
end
if z[4] then chocolate_egg_daniel()
end
if z[5] then fruit_cake_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function choclate_shop_parts()
chocolate_bar() 
jelly_beans()
easter_basket()
chocolate_egg()
fruit_cake()
end

function chocolate_bar_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =367764140
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function chocolate_bar()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 367764140
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CHOCOLATE BAR", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHOCOLATE BAR") 
end

function jelly_beans_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 501522350
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function jelly_beans() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 501522350
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " JELLY BEANS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL  JELLY BEANS") 
end

function easter_basket_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 856126755 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end  

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function easter_basket()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 856126755
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "EASTER BASKET", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL EASTER BASKET") 
end

function chocolate_egg_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 367767594
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function chocolate_egg()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 367767594
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CHOCOLATE EGG", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHOCOLATE EGG") 
end

function fruit_cake_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1128736189
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function fruit_cake()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1128736189
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FRUIT CAKE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FRUIT CAKE") 
end

function farmer_shop_daniel()   
local zz = {"1. FARMER'S HAY FORK DANIEL","2. BOX OF GRAPES DANIEL","3. WOOL SHIRT DANIEL","4. PICKNIC BASKET DANIEL","5. APPLE JAM DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"FARMER SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then farmershayfork_daniel()
end
if z[2] then box_of_grapes_daniel()
end
if z[3] then wool_shirt_daniel()
end
if z[4] then picknic_basket_daniel()
end
if z[5] then apple_jam_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function farmer_shop()   
local zz = {"1. FARMER'S HAY FORK ","2. BOX OF GRAPES ","3. WOOL SHIRT ","4. PICKNIC BASKET ","5. APPLE JAM ","6. FARMER SHOP ALL","7. OPEN GAME GUARDIAN","8.  BACK"," 9. EXIT"} 
local z = gg.multiChoice(zz, nil,"FARMER SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then farmershayfork()
end
if z[2] then box_of_grapes()
end
if z[3] then wool_shirt()
end
if z[4] then picknic_basket()
end
if z[5] then apple_jam()
end 
if z[6] then farmers_shop_parts()
end
if z[7]then eigth()
end 
if z[8] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function farmers_shop_parts()
farmershayfork()
box_of_grapes()
wool_shirt()
picknic_basket()
apple_jam()
end

function farmershayfork_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 880024505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function farmershayfork()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 880024505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FARMER'S HAY FORK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FARMER'S HAY FORK") 
end

function box_of_grapes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1754918885
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function box_of_grapes() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1754918885
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "BOX OF GRAPES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BOX OF GRAPES") 
end

function wool_shirt_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -313937296
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function wool_shirt()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -313937296
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "WOOL SHIRT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WOOL SHIRT") 
end

function picknic_basket_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1423167883
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function picknic_basket()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1423167883
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PICKNIC BASKET", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PICKNIC BASKET") 
end

function apple_jam_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1153640785
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function apple_jam()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1153640785
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "APPLE JAM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL APPLE JAM") 
end


function exit() 
gg.setVisible(false)
os.exit() 
end 

function exit() 
gg.setVisible(false) 
os.exit()
end 

while true do 
if gg.isVisible() then
 zzz = true
 gg.setVisible(false)
 end  
if zzz then 
Mainmenu() eigth()
end 
gg.sleep(100) 
end
if gg.gg.setVisible(true) then 
return zzz
end  
